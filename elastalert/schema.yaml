$schema: http://json-schema.org/draft-07/schema#
definitions:

  # Either a single string OR an array of strings
  arrayOfStrings: &arrayOfString
    type: [string, array]
    items: {type: string}

  # Either a single string OR an array of strings OR an array of ararys
  arrayOfStringsOrOtherArrays: &arrayOfStringsOrOtherArray
    type: [string, array]
    items: {type: [string, array]}

  timedelta: &timedelta
    type: object
    additionalProperties: false
    properties:
      days: {type: number}
      weeks: {type: number}
      hours: {type: number}
      minutes: {type: number}
      seconds: {type: number}
      milliseconds: {type: number}

  timeFrame: &timeframe
    type: object
    additionalProperties: false
    properties:
      days: {type: number}
      weeks: {type: number}
      hours: {type: number}
      minutes: {type: number}
      seconds: {type: number}
      milliseconds: {type: number}
      schedule: {type: string}

  slackField: &slackField
    type: object
    additionalProperties: false
    properties:
      title: {type: string}
      value: {type: string}
      short: {type: boolean}

  arrayOfSlackFields: &arrayOfSlackField
    type: array
    items: *slackField

  mattermostField: &mattermostField
    type: object
    additionalProperties: false
    properties:
      title: {type: string}
      value: {type: string}
      args: *arrayOfString
      short: {type: boolean}

  arrayOfMattermostFields: &arrayOfMattermostField
    type: array
    items: *mattermostField

  filter: &filter {}

required: [type, index, alert]
type: object

### Rule Types section
oneOf:
  - title: Any
    properties:
      type: {enum: [any]}

  - title: Blacklist
    required: [blacklist, compare_key]
    properties:
      type: {enum: [blacklist]}
      compare_key: {'items': {'type': 'string'},'type': ['string', 'array']}
      blacklist: {type: array, items: {type: string}}

  - title: Whitelist
    required: [whitelist, compare_key, ignore_null]
    properties:
      type: {enum: [whitelist]}
      compare_key: {'items': {'type': 'string'},'type': ['string', 'array']}
      whitelist: {type: array, items: {type: string}}
      ignore_null: {type: boolean}

  - title: Change
    required: [query_key, compare_key, ignore_null]
    properties:
      type: {enum: [change]}
      compare_key: {'items': {'type': 'string'},'type': ['string', 'array']}
      ignore_null: {type: boolean}
      timeframe: *timeframe

  - title: Frequency
    required: [num_events, timeframe]
    properties:
      type: {enum: [frequency]}
      num_events: {type: integer}
      timeframe: *timeframe
      use_count_query: {type: boolean}
      doc_type: {type: string}
      use_terms_query: {type: boolean}
      terms_size: {type: integer}
      attach_related: {type: boolean}

  - title: Spike
    required: [spike_height, spike_type, timeframe]
    properties:
      type: {enum: [spike]}
      spike_height: {type: number}
      spike_type: {enum: ["up", "down", "both"]}
      timeframe: *timeframe
      use_count_query: {type: boolean}
      doc_type: {type: string}
      use_terms_query: {type: boolean}
      terms_size: {type: integer}
      alert_on_new_data: {type: boolean}
      threshold_ref: {type: integer}
      threshold_cur: {type: integer}

  - title: Spike Aggregation
    required: [spike_height, spike_type, timeframe]
    properties:
      type: {enum: [spike_aggregation]}
      spike_height: {type: number}
      spike_type: {enum: ["up", "down", "both"]}
      metric_agg_type: {enum: ["min", "max", "avg", "sum", "cardinality", "value_count", "percentiles"]}
      timeframe: *timeframe
      use_count_query: {type: boolean}
      doc_type: {type: string}
      use_terms_query: {type: boolean}
      terms_size: {type: integer}
      alert_on_new_data: {type: boolean}
      threshold_ref: {type: number}
      threshold_cur: {type: number}
      min_doc_count: {type: integer}
      percentile_range: {type: integer}

  - title: Flatline
    required: [threshold, timeframe]
    properties:
      type: {enum: [flatline]}
      timeframe: *timeframe
      threshold: {type: integer}
      use_count_query: {type: boolean}
      doc_type: {type: string}

  - title: New Term
    required: []
    properties:
      type: {enum: [new_term]}
      fields: *arrayOfStringsOrOtherArray
      terms_window_size: *timeframe
      alert_on_missing_field: {type: boolean}
      use_terms_query: {type: boolean}
      terms_size: {type: integer}

  - title: Cardinality
    required: [cardinality_field, timeframe]
    properties:
      type: {enum: [cardinality]}
      max_cardinality: {type: integer}
      min_cardinality: {type: integer}
      cardinality_field: {type: string}
      timeframe: *timeframe

  - title: Metric Aggregation
    required: [metric_agg_key,metric_agg_type]
    properties:
      type: {enum: [metric_aggregation]}
      metric_agg_type: {enum: ["min", "max", "avg", "sum", "cardinality", "value_count", "percentiles"]}
      #timeframe: *timeframe
      percentile_range: {type: integer}

  - title: Percentage Match
    required: [match_bucket_filter]
    properties:
      type: {enum: [percentage_match]}

  - title: Custom Rule from Module
    properties:
      # custom rules include a period in the rule type
      type: {pattern: "[.]"}

properties:

  # Common Settings
  es_host: {type: string}
  es_port: {type: integer}
  index: {type: string}
  name: {type: string}

  use_ssl: {type: boolean}
  verify_certs: {type: boolean}
  es_username: {type: string}
  es_password: {type: string}
  es_bearer: {type: string}
  use_strftime_index: {type: boolean}

  # Optional Settings
  import:
    anyOf:
      - type: array
        items:
          type: string
      - type: string
  aggregation: *timeframe
  realert: *timeframe
  exponential_realert: *timeframe

  buffer_time: *timeframe
  query_delay: *timeframe
  max_query_size: {type: integer}
  max_scrolling: {type: integer}
  max_threads: {type: integer}
  misfire_grace_time: {type: integer}

  owner: {type: string}
  priority: {type: integer}

  filter :
    type: [array, object]
    items: *filter
    additionalProperties: false

  include: {type: array, items: {type: string}}
  top_count_keys: {type: array, items: {type: string}}
  top_count_number: {type: integer}
  raw_count_keys: {type: boolean}
  use_local_time: {type: boolean}
  custom_pretty_ts_format: {type: string}
  match_enhancements: {type: array, items: {type: string}}
  query_key: *arrayOfString
  replace_dots_in_field_names: {type: boolean}
  scan_entire_timeframe: {type: boolean}

  ### Kibana Discover App Link
  generate_kibana_discover_url: {type: boolean}
  kibana_discover_app_url: {type: string, format: uri}
  kibana_discover_version: {type: string, enum: ['7.14', '7.13', '7.12', '7.11', '7.10', '7.9', '7.8', '7.7', '7.6', '7.5', '7.4', '7.3', '7.2', '7.1', '7.0', '6.8', '6.7', '6.6', '6.5', '6.4', '6.3', '6.2', '6.1', '6.0', '5.6']}
  kibana_discover_index_pattern_id: {type: string, minLength: 1}
  kibana_discover_columns: {type: array, items: {type: string, minLength: 1}, minItems: 1}
  kibana_discover_from_timedelta: *timedelta
  kibana_discover_to_timedelta: *timedelta

  # Alert Content
  alert_text: {type: string} # Python format string
  alert_text_args: {type: array, items: {type: string}}
  alert_text_kw: {type: object}
  alert_text_type: {enum: [alert_text_only, alert_text_jinja, exclude_fields, aggregation_summary_only]}
  alert_missing_value: {type: string}
  timestamp_field: {type: string}
  field: {}

  ### Simple
  simple_webhook_url: *arrayOfString
  simple_proxy: {type: string}

  ### Alerta
  alerta_api_url: {type: string}
  alerta_api_key: {type: string}
  alerta_use_qk_as_resource: {type: boolean}
  alerta_use_match_timestamp: {type: boolean}
  alerta_api_skip_ssl: {type: boolean}
  alerta_severity: {type: string}
  alerta_timeout: {type: integer}
  alerta_type: {type: string}
  alerta_resource: {type: string}   # Python format string
  alerta_service: {type: array, items: {type: string}}  # Python format string
  alerta_origin: {type: string}   # Python format string
  alerta_environment: {type: string}  # Python format string
  alerta_group: {type: string}  # Python format string
  alerta_correlate: {type: array, items: {type: string}}  # Python format string
  alerta_tags: {type: array, items: {type: string}}   # Python format string
  alerta_event: {type: string} # Python format stringalerta_use_match_timestamp
  alerta_text: {type: string} # Python format string
  alerta_value: {type: string} # Python format string
  alerta_attributes_keys: {type: array, items: {type: string}}
  alerta_attributes_values: {type: array, items: {type: string}}  # Python format string

  ### AWS SES
  ses_email: *arrayOfString
  ses_from_addr: {type: string}
  ses_aws_access_key: {type: string}
  ses_aws_secret_key: {type: string}
  ses_aws_region: {type: string}
  ses_aws_profile: {type: string}
  ses_email_reply_to: {type: string}
  ses_cc: *arrayOfString
  ses_bcc: *arrayOfString

  ### AWS SNS
  sns_topic_arn: {type: string}
  sns_aws_access_key_id: {type: string}
  sns_aws_secret_access_key: {type: string}
  sns_aws_region: {type: string}
  sns_aws_profile: {type: string}

  ### Chatwork
  chatwork_apikey: {type: string}
  chatwork_room_id: {type: string}
  chatwork_proxy: {type: string}
  chatwork_proxy_login: {type: string}
  chatwork_proxy_pass: {type: string}

  ### Command
  command: *arrayOfString
  pipe_match_json: {type: boolean}
  pipe_alert_text: {type: boolean}
  fail_on_non_zero_exit: {type: boolean}

  ### Datadog
  datadog_api_key: {type: string}
  datadog_app_key: {type: string}

  ### Dingtalk
  dingtalk_access_token: {type: string}
  dingtalk_msgtype: {type: string, enum: ['text', 'markdown', 'single_action_card', 'action_card']}
  dingtalk_single_title: {type: string}
  dingtalk_single_url: {type: string}
  dingtalk_btn_orientation: {type: string}
  dingtalk_proxy: {type: string}
  dingtalk_proxy_login: {type: string}
  dingtalk_proxy_pass: {type: string}

  ## Discord
  discord_webhook_url: {type: string}
  discord_emoji_title: {type: string}
  discord_proxy: {type: string}
  discord_proxy_login: {type: string}
  discord_proxy_password: {type: string}
  discord_embed_color: {type: integer}
  discord_embed_footer: {type: string}
  discord_embed_icon_url: {type: string}

  ### Email
  email: *arrayOfString
  email_from_field: {type: string}
  email_add_domain: {type: string}
  smtp_host: {type: string}
  smtp_port: {type: integer}
  smtp_ssl: {type: boolean}
  smtp_auth_file: {type: string}
  smtp_cert_file: {type: string}
  smtp_key_file: {type: string}
  email_reply_to: {type: string}
  from_addr: {type: string}
  cc: *arrayOfString
  bcc: *arrayOfString
  email_format: {type: string}
  assets_dir: {type: string}
  email_image_keys: {type: array, items: {type: string}}
  email_image_values: {type: array, items: {type: string}}
  notify_email: *arrayOfString # if rule is slow or erroring, send to this email

  ### Exotel
  exotel_account_sid: {type: string}
  exotel_auth_token: {type: string}
  exotel_to_number: {type: string}
  exotel_from_number: {type: string}

  ### Gitter
  gitter_webhook_url: {type: string}
  gitter_msg_level: {enum: [info, error]}
  gitter_proxy: {type: string}

  ### GoogleChat
  googlechat_webhook_url: *arrayOfString
  googlechat_format: {type: string, enum: ['basic', 'card']}
  googlechat_header_title: {type: string}
  googlechat_header_subtitle: {type: string}
  googlechat_header_image: {type: string}
  googlechat_footer_kibanalink: {type: string}

  ### HTTP POST
  http_post_url: *arrayOfString
  http_post_proxy: {type: string}
  http_post_ca_certs: {type: boolean}
  http_post_ignore_ssl_errors: {type: boolean}
  http_post_timeout: {type: integer}

  ### Jira
  jira_server: {type: string}
  jira_project: {type: string}
  jira_issuetype: {type: string}
  jira_account_file: {type: string} # a Yaml file that includes the keys {user:, password:}
  jira_assignee: {type: string}
  jira_component: *arrayOfString
  jira_components: *arrayOfString
  jira_description: {type: string}
  jira_label: *arrayOfString
  jira_labels: *arrayOfString
  jira_priority: {type: number}
  jira_watchers: *arrayOfString
  jira_bump_tickets: {type: boolean}
  jira_ignore_in_title: {type: string}
  jira_max_age: {type: number}
  jira_bump_not_in_statuses: *arrayOfString
  jira_bump_in_statuses: *arrayOfString
  jira_bump_only: {type: boolean}
  jira_transition_to: {type: boolean}
  jira_bump_after_inactivity: {type: number}

  ### Line Notify
  linenotify_access_token: {type: string}

  ### Mattermost
  mattermost_webhook_url: *arrayOfString
  mattermost_proxy: {type: string}
  mattermost_ignore_ssl_errors: {type: boolean}
  mattermost_username_override: {type: string}
  mattermost_channel_override: {type: string}
  mattermost_icon_url_override: {type: string}
  mattermost_msg_pretext: {type: string}
  mattermost_msg_color: {enum: [good, warning, danger]}
  mattermost_msg_fields: *arrayOfMattermostField
  mattermost_title: {type: string}
  mattermost_title_link: {type: string}
  mattermost_footer: {type: string}
  mattermost_footer_icon: {type: string}
  mattermost_image_url: {type: string}
  mattermost_thumb_url: {type: string}
  mattermost_author_name: {type: string}
  mattermost_author_link: {type: string}
  mattermost_author_icon: {type: string}
  mattermost_attach_kibana_discover_url {type: boolean}
  mattermost_kibana_discover_color {type: string}
  mattermost_kibana_discover_title {type: string}

  ### Microsoft Teams
  ms_teams_webhook_url: *arrayOfString
  ms_teams_alert_summary: {type: string}
  ms_teams_theme_color: {type: string}
  ms_teams_proxy: {type: string}
  ms_teams_alert_fixed_width: {type: boolean}

  ### Opsgenie
  opsgenie_key: {type: string}
  opsgenie_account: {type: string}
  opsgenie_addr: {type: string}
  opsgenie_message: {type: string}
  opsgenie_alias: {type: string}
  opsgenie_subject: {type: string}
  opsgenie_priority: {type: string}
  opsgenie_proxy: {type: string}
  opsgenie_source: {type: string}
  opsgenie_entity: {type: string}
  opsgenie_details:
    type: object
    minProperties: 1
    patternProperties:
      "^.+$":
        oneOf:
          - type: string
          - type: object
            additionalProperties: false
            required: [field]
            properties:
              field: {type: string, minLength: 1}

  ### PagerDuty
  pagerduty_service_key: {type: string}
  pagerduty_client_name: {type: string}
  pagerduty_event_type: {enum: [none, trigger, resolve, acknowledge]}
  pagerduty_incident_key: {type: string}
  pagerduty_incident_key_args: {type: array, items: {type: string}}
  pagerduty_proxy: {type: string}
  pagerduty_api_version: {type: string, enum: ['v1', 'v2']}
  pagerduty_v2_payload_class: {type: string}
  pagerduty_v2_payload_class_args: {type: array, items: {type: string}}
  pagerduty_v2_payload_component: {type: string}
  pagerduty_v2_payload_component_args: {type: array, items: {type: string}}
  pagerduty_v2_payload_group: {type: string}
  pagerduty_v2_payload_group_args: {type: array, items: {type: string}}
  pagerduty_v2_payload_severity: {type: string, enum: ['critical', 'error', 'warning', 'info']}
  pagerduty_v2_payload_source: {type: string}
  pagerduty_v2_payload_source_args: {type: array, items: {type: string}}
  pagerduty_v2_payload_include_all_info: {type: boolean}

  ### PagerTree
  pagertree_integration_url: {type: string}
  pagertree_proxy: {type: string}

  ### RocketChat
  rocket_chat_webhook_url: *arrayOfString
  rocket_chat_username_override: {type: string}
  rocket_chat_channel_override: *arrayOfString
  rocket_chat_emoji_override: {type: string}
  rocket_chat_msg_color: {enum: [good, warning, danger]}
  rocket_chat_text_string: {type: string}
  rocket_chat_proxy: {type: string}
  rocket_chat_attach_kibana_discover_url {type: boolean}
  rocket_chat_kibana_discover_color {type: string}
  rocket_chat_kibana_discover_title {type: string}
  rocket_chat_ca_certs: {type: boolean}
  rocket_chat_ignore_ssl_errors: {type: boolean}
  rocket_chat_timeout: {type: integer}

  ### ServiceNow
  servicenow_rest_url: {type: string}
  username: {type: string}
  password: {type: string}
  short_description: {type: string}
  comments: {type: string}
  assignment_group: {type: string}
  category: {type: string}
  subcategory: {type: string}
  cmdb_ci: {type: string}
  caller_id: {type: string}
  servicenow_proxy: {type: string}
  servicenow_impact: {type: integer, minimum: 1, maximum: 3}
  servicenow_urgency: {type: integer, minimum: 1, maximum: 3}

  ### Slack
  slack_webhook_url: *arrayOfString
  slack_username_override: {type: string}
  slack_channel_override: *arrayOfString
  slack_emoji_override: {type: string}
  slack_icon_url_override: {type: string}
  slack_msg_color: {enum: [good, warning, danger]}
  slack_parse_override: {enum: [none, full]}
  slack_text_string: {type: string}
  slack_proxy: {type: string}
  slack_alert_fields: *arrayOfSlackField
  slack_ignore_ssl_errors: {type: boolean}
  slack_title: {type: string}
  slack_title_link: {type: string}
  slack_timeout: {type: integer}
  slack_attach_kibana_discover_url: {type: boolean}
  slack_kibana_discover_color: {type: string}
  slack_kibana_discover_title: {type: string}
  slack_ca_certs: {type: boolean}
  slack_footer: {type: string}
  slack_footer_icon: {type: string}
  slack_image_url: {type: string}
  slack_thumb_url: {type: string}
  slack_author_name: {type: string}
  slack_author_link: {type: string}
  slack_author_icon: {type: string}
  slack_msg_pretext: {type: string}

  ### Splunk On-Call (Formerly VictorOps)
  victorops_api_key: {type: string}
  victorops_routing_key: {type: string}
  victorops_message_type: {enum: [INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY]}
  victorops_entity_id: {type: string}
  victorops_entity_display_name: {type: string}
  victorops_proxy: {type: string}

  ### Stomp
  stomp_hostname: {type: string}
  stomp_hostport: {type: string}
  stomp_login: {type: string}
  stomp_password: {type: string}
  stomp_ssl: {type: boolean}
  stomp_destination: {type: string}

  ### Telegram
  telegram_bot_token: {type: string}
  telegram_room_id: {type: string}
  telegram_api_url: {type: string}
  telegram_proxy: {type: string}
  telegram_proxy_login: {type: string}
  telegram_proxy_pass: {type: string}

  ### Twilio
  twilio_account_sid: {type: string}
  twilio_auth_token: {type: string}
  twilio_to_number: {type: string}
  twilio_from_number: {type: string}
  twilio_message_service_sid: {type: string}
  twilio_use_copilot: {type: boolean}

  ### Zabbix
  zbx_sender_host: {type: string}
  zbx_sender_port: {type: integer}
  zbx_host: {type: string}
  zbx_key: {type: string}
